<?xml version="1.0" encoding="UTF-8"?>
<testExecutions version="1">
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/tools/cfgViewer/transformer.test.ts">
    <testCase name="should create single block with one element" duration="6"/>
    <testCase name="should create multi-element block" duration="0"/>
    <testCase name="should create edge to the same block" duration="1"/>
    <testCase name="should create branch" duration="0"/>
    <testCase name="should create a loop between nodes" duration="1"/>
    <testCase name="should create unique edge ids" duration="0"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/cfg/cfg.test.ts">
    <testCase name="empty file" duration="22"/>
    <testCase name="simple literals" duration="20"/>
    <testCase name="identifier expression" duration="8"/>
    <testCase name="call expression" duration="5"/>
    <testCase name="call expression with parameters" duration="10"/>
    <testCase name="assignment" duration="5"/>
    <testCase name="assignment and binary" duration="5"/>
    <testCase name="conditional expression" duration="7"/>
    <testCase name="assignment of conditional expression" duration="4"/>
    <testCase name="array literal" duration="5"/>
    <testCase name="template expression (string literal)" duration="12"/>
    <testCase name="declaration expressions" duration="18"/>
    <testCase name="property access" duration="10"/>
    <testCase name="element access" duration="14"/>
    <testCase name="new expression" duration="9"/>
    <testCase name="tagged template" duration="9"/>
    <testCase name="type assertion expression" duration="14"/>
    <testCase name="delete/typeof/void/await expressions" duration="16"/>
    <testCase name="prefix unary expression" duration="9"/>
    <testCase name="postfix unary expression" duration="8"/>
    <testCase name="&apos;as&apos; expression" duration="5"/>
    <testCase name="non-null expression" duration="10"/>
    <testCase name="spread element" duration="6"/>
    <testCase name="metaproperty" duration="12"/>
    <testCase name="yield expression" duration="18"/>
    <testCase name="&amp;&amp;" duration="8"/>
    <testCase name="parenthesized" duration="16"/>
    <testCase name="||" duration="8"/>
    <testCase name="complex conditional" duration="16"/>
    <testCase name="simple binary operators" duration="48"/>
    <testCase name="keywords" duration="4"/>
    <testCase name="object literal" duration="4"/>
    <testCase name="object destructuring assignment" duration="5"/>
    <testCase name="jsx tag names" duration="26"/>
    <testCase name="jsx attributes" duration="19"/>
    <testCase name="jsx children" duration="15"/>
    <testCase name="if statement" duration="26"/>
    <testCase name="block" duration="4"/>
    <testCase name="for loop" duration="4"/>
    <testCase name="complete for loop" duration="4"/>
    <testCase name="infinite for loop" duration="3"/>
    <testCase name="while loop" duration="8"/>
    <testCase name="do while loop" duration="16"/>
    <testCase name="for in loop" duration="8"/>
    <testCase name="for of loop" duration="4"/>
    <testCase name="switch without break and defaults" duration="11"/>
    <testCase name="switch with default" duration="16"/>
    <testCase name="return" duration="5"/>
    <testCase name="should not forget successors of branching nodes" duration="6"/>
    <testCase name="empty statement" duration="7"/>
    <testCase name="declarations" duration="19"/>
    <testCase name="variable statement" duration="15"/>
    <testCase name="&apos;with&apos; statement" duration="5"/>
    <testCase name="&apos;throw&apos; statement" duration="4"/>
    <testCase name="continue statement" duration="73"/>
    <testCase name="double continue" duration="5"/>
    <testCase name="break statement" duration="76"/>
    <testCase name="labels" duration="10"/>
    <testCase name="mix continue/break statement" duration="5"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/symbols/symbols.test.ts">
    <testCase name="variable declarations" duration="10"/>
    <testCase name="other declarations" duration="28"/>
    <testCase name="writes" duration="22"/>
    <testCase name="reads" duration="33"/>
    <testCase name="read-writes" duration="4"/>
    <testCase name="same symbol for shorthand property" duration="2"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/se/se.test.ts">
    <testCase name="Variable Declaration creates unknown symbolic value" duration="13"/>
    <testCase name="Variable Declaration creates literal symbolic value" duration="6"/>
    <testCase name="Variable Declaration initializes with undefined" duration="5"/>
    <testCase name="Variable Declaration initializes with already known symbolic value" duration="5"/>
    <testCase name="Assignment assigns already known symbolic value" duration="7"/>
    <testCase name="Assignment assigns literal symbolic value" duration="6"/>
    <testCase name="Assignment assigns unknown symbolic value" duration="5"/>
    <testCase name="Assignment chains assignments" duration="5"/>
    <testCase name="Assignment assigns unknown to all destructuring identifiers" duration="7"/>
    <testCase name="Increments Decrements changes SV after postfix" duration="5"/>
    <testCase name="Conditions tracks symbolic values across branches" duration="9"/>
    <testCase name="Loops does not cycle on loops" duration="8"/>
    <testCase name="Parameters initializes program state with parameters symbols to unknown" duration="6"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/symbols/lva.test.ts">
    <testCase name="linear" duration="4"/>
    <testCase name="simple if" duration="2"/>
    <testCase name="simple loop" duration="3"/>
    <testCase name="loops and branches" duration="3"/>
    <testCase name="ignore class fields" duration="1"/>
    <testCase name="ignore symbols used in nested functions" duration="2"/>
    <testCase name="destructuring" duration="1"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/runner/sonartsServer.test.ts">
    <testCase name="run analysis on provided content" duration="599"/>
    <testCase name="creates type-checker-based issue" duration="318"/>
    <testCase name="creates cross-file type-checker-based issue" duration="336"/>
    <testCase name="is able to process partial request" duration="664"/>
    <testCase name="reports syntax error" duration="165"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/runner/cpd.test.ts">
    <testCase name="should not skip any token" duration="6"/>
    <testCase name="should skip comments" duration="5"/>
    <testCase name="should provide correct position" duration="6"/>
    <testCase name="should replace strings" duration="18"/>
    <testCase name="should process JSX syntax" duration="4"/>
    <testCase name="should process JSX syntax with empty text elements" duration="5"/>
    <testCase name="should process JSX syntax with not empty text elements" duration="4"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/runner/metrics.test.ts">
    <testCase name="should return lines of code and comment lines" duration="7"/>
    <testCase name="should return NOSONAR lines" duration="5"/>
    <testCase name="should return executable lines" duration="8"/>
    <testCase name="should count classes" duration="4"/>
    <testCase name="should count functions" duration="4"/>
    <testCase name="should count statements" duration="5"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/runner/highlighter.test.ts">
    <testCase name="should highlight keywords" duration="11"/>
    <testCase name="should highlight comments" duration="6"/>
    <testCase name="should highlight strings" duration="29"/>
    <testCase name="should highlight numbers" duration="17"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/runner/sonarUtils.test.ts">
    <testCase name="should stringify to stream" duration="1"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/se/constraints.test.ts">
    <testCase name="If constrains condition to TRUTHY for THEN branch" duration="11"/>
    <testCase name="If constrains condition to FALSY for ELSE branch" duration="5"/>
    <testCase name="If merges constraints after the block" duration="5"/>
    <testCase name="If constrains nested IFs" duration="5"/>
    <testCase name="Conditional expression constrains condition to TRUTHY" duration="5"/>
    <testCase name="Conditional expression constrains condition to FALSE" duration="5"/>
    <testCase name="Conditional expression merges constraints after the block" duration="6"/>
    <testCase name="While constrains condition to TRUTHY" duration="7"/>
    <testCase name="While has only FALSY constraint after the block" duration="6"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/runner/symbolHighlighting.test.ts">
    <testCase name="should return symbols and their references" duration="11"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/se/expressions.test.ts">
    <testCase name="assignment" duration="8"/>
    <testCase name="function call" duration="6"/>
    <testCase name="function call with parameters" duration="5"/>
    <testCase name="object declaration" duration="5"/>
    <testCase name="property access expression" duration="7"/>
    <testCase name="defaults to pushing unknown value" duration="4"/>
    <testCase name="postfix increment" duration="5"/>
    <testCase name="does not push value to the stack" duration="5"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/utils/complexity.test.ts">
    <testCase name="should count complexity not skipping functions" duration="7"/>
    <testCase name="should count cognitive complexity for file" duration="6"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/runner/languageService.test.ts">
    <testCase name="should return type information" duration="385"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/rulesProfile.test.ts">
    <testCase name="should contain all implemented rules" duration="2"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/cfg/cfgBlock.test.ts">
    <testCase name="should create simple label" duration="6"/>
    <testCase name="should create multi-line label" duration="1"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/rulesReadme.test.ts">
    <testCase name="should contain all rules listed in extension" duration="6"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noHardcodedCredentialsRule/noHardcodedCredentialsRule.test.ts">
    <testCase name="raises error" duration="10"/>
    <testCase name="raises errors with custom configuration" duration="5"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/runner/tsrunner.test.ts">
    <testCase name="should process full input" duration="895"/>
    <testCase name="should process files with BOM correctly" duration="739"/>
    <testCase name="should report syntax errors" duration="378"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/runner/rules.test.ts">
    <testCase name="should run sonarts rules" duration="1022"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/cognitiveComplexityRule/cognitiveComplexityRule.test.ts">
    <testCase name="raises errors with default parameter" duration="11"/>
    <testCase name="raises errors when set to Zero" duration="23"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/mccabeComplexityRule/mccabeComplexityRule.test.ts">
    <testCase name="raises errors with default parameter" duration="13"/>
    <testCase name="raises errors when set to 1" duration="9"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noBigFunctionRule/noBigFunctionRule.test.ts">
    <testCase name="raises error with default" duration="8"/>
    <testCase name="raises errors when set to 5" duration="7"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/maxUnionSizeRule/maxUnionSizeRule.test.ts">
    <testCase name="raises error" duration="9"/>
    <testCase name="raises errors when set to 5" duration="4"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noMultilineStringLiteralsRule/noMultilineStringLiteralsRule.test.ts">
    <testCase name="raises error" duration="7"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noNestedTemplateLiteralsRule/noNestedTemplateLiteralsRule.test.ts">
    <testCase name="raises error" duration="15"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/parametersMaxNumberRule/parametersMaxNumberRule.test.ts">
    <testCase name="raises errors with default parameter" duration="600"/>
    <testCase name="raises errors when set to Zero" duration="369"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noCollectionSizeMischeckRule/noCollectionSizeMischeckRule.test.ts">
    <testCase name="raises error" duration="1083"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noVariableUsageBeforeDeclarationRule/noVariableUsageBeforeDeclarationRule.test.ts">
    <testCase name="raises error" duration="1326"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noAllDuplicatedBranchesRule/noAllDuplicatedBranchesRule.test.ts">
    <testCase name="raises error" duration="18"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noGratuitousExpressionsRule/noGratuitousExpressionsRule.test.ts">
    <testCase name="raises error" duration="1105"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noDuplicateInCompositeRule/noDuplicateInCompositeRule.test.ts">
    <testCase name="raises error" duration="23"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/preferPromiseShorthandRule/preferPromiseShorthandRule.test.ts">
    <testCase name="raises error" duration="10"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noIdenticalExpressionsRule/noIdenticalExpressionsRule.test.ts">
    <testCase name="raises error" duration="13"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noRedundantParenthesesRule/noRedundantParenthesesRule.test.ts">
    <testCase name="raises error" duration="8"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noIdenticalConditionsRule/noIdenticalConditionsRule.test.ts">
    <testCase name="raises error" duration="9"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noAccessorFieldMismatchRule/noAccessorFieldMismatchRule.test.ts">
    <testCase name="raises error" duration="1061"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noIgnoredInitialValueRule/noIgnoredInitialValueRule.test.ts">
    <testCase name="raises error" duration="1060"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noUselessIntersectionRule/noUselessIntersectionRule.test.ts">
    <testCase name="raises error" duration="1189"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noSameLineConditionalRule/noSameLineConditionalRule.test.ts">
    <testCase name="raises error" duration="8"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noEmptyDestructuringRule/noEmptyDestructuringRule.test.ts">
    <testCase name="raises error" duration="8"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noStatementsSameLineRule/noStatementsSameLineRule.test.ts">
    <testCase name="raises error" duration="17"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noDuplicatedBranchesRule/noDuplicatedBranchesRule.test.ts">
    <testCase name="raises error" duration="15"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noIdenticalFunctionsRule/noIdenticalFunctionsRule.test.ts">
    <testCase name="raises error" duration="12"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noEmptyNestedBlocksRule/noEmptyNestedBlocksRule.test.ts">
    <testCase name="raises error" duration="13"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/preferImmediateReturnRule/preferImmediateReturnRule.test.ts">
    <testCase name="raises error" duration="1008"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noUnenclosedMultilineBlockRule/noUnenclosedMultilineBlockRule.test.ts">
    <testCase name="test" duration="13"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/consecutiveOverloadsRule/consecutiveOverloadsRule.test.ts">
    <testCase name="raises error" duration="580"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noUselessIncrementRule/noUselessIncrementRule.test.ts">
    <testCase name="raises error" duration="7"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noUndefinedArgumentRule/noUndefinedArgumentRule.test.ts">
    <testCase name="raises error" duration="1004"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/preferDefaultLastRule/preferDefaultLastRule.test.ts">
    <testCase name="raises error" duration="7"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noDuplicateStringRule/noDuplicateStringRule.test.ts">
    <testCase name="raises error" duration="10"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noRedundantBooleanRule/noRedundantBooleanRule.test.ts">
    <testCase name="raises error" duration="626"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noExtraSemicolonRule/noExtraSemicolonRule.test.ts">
    <testCase name="raises error" duration="7"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noElementOverwriteRule/noElementOverwriteRule.test.ts">
    <testCase name="raises error" duration="930"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/usePrimitiveTypeRule/usePrimitiveTypeRule.test.ts">
    <testCase name="raises error" duration="13"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noRedundantJumpRule/noRedundantJumpRule.test.ts">
    <testCase name="raises error" duration="12"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noCommentedCodeRule/noCommentedCodeRule.test.ts">
    <testCase name="raises error" duration="17"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noMisleadingArrayReverseRule/noMisleadingArrayReverseRule.test.ts">
    <testCase name="test" duration="1099"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noNestedIncdecRule/noNestedIncdecRule.test.ts">
    <testCase name="raises error" duration="16"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noUseOfEmptyReturnValueRule/noUseOfEmptyReturnValueRule.test.ts">
    <testCase name="test" duration="1091"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noReturnTypeAnyRule/noReturnTypeAnyRule.test.ts">
    <testCase name="raises error" duration="897"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noArrayDeleteRule/noArrayDeleteRule.test.ts">
    <testCase name="raises error" duration="1189"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noSmallSwitchRule/noSmallSwitchRule.test.ts">
    <testCase name="raises error" duration="11"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noInconsistentReturnRule/noInconsistentReturnRule.test.ts">
    <testCase name="test" duration="12"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noUselessCastRule/noUselessCastRule.test.ts">
    <testCase name="raises error" duration="1250"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noCaseWithOrRule/noCaseWithOrRule.test.ts">
    <testCase name="raises error" duration="8"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noMisspelledOperatorRule/noMisspelledOperatorRule.test.ts">
    <testCase name="test" duration="17"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noUnusedArrayRule/noUnusedArrayRule.test.ts">
    <testCase name="raises error" duration="1477"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noUnconditionalJumpRule/noUnconditionalJumpRule.test.ts">
    <testCase name="test" duration="61"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/useTypeAliasRule/useTypeAliasRule.test.ts">
    <testCase name="raises error" duration="1021"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noDeadStoreRule/noDeadStoreRule.test.ts">
    <testCase name="raises error" duration="1057"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noInMisuseRule/noInMisuseRule.test.ts">
    <testCase name="raises error" duration="1070"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noUnthrownErrorRule/noUnthrownErrorRule.test.ts">
    <testCase name="test" duration="7"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noSelfAssignmentRule/noSelfAssignmentRule.test.ts">
    <testCase name="test" duration="953"/>
  </file>
  <file path="/Users/elena/Projects/LANG/SonarTS/sonarts-core/tests/rules/noIgnoredReturnRule/noIgnoredReturnRule.test.ts">
    <testCase name="test" duration="1040"/>
  </file>
</testExecutions>